type User {
  createdAt: DateTime! @createdAt
  id: ID! @id
  avatar: String
    @default(
      value: "https://instapost-clone.s3-us-west-1.amazonaws.com/1597009545181"
    )
  username: String! @unique
  email: String! @unique
  bio: String
  name: String
  phone: Int
  gender: String
  private: Boolean @default(value: false)
  privateAcc: Boolean @default(value: false)
  followers: [User!]! @relation(name: "FollowRelation")
  following: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]! @relation(name: "PostsOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser", onDelete: CASCADE)
  rooms: [Room!]!
  loginSecret: String
}

type Post {
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  id: ID! @id
  location: String
  caption: String!
  user: User @relation(name: "PostsOfUser")
  files: [File!]! @relation(name: "FilesOfPost", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikeOfPost", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentOfPost", onDelete: CASCADE)
}

type Like {
  createdAt: DateTime! @createdAt
  id: ID! @id
  user: User @relation(name: "LikesOfUser")
  post: Post @relation(name: "LikeOfPost")
}

type Comment {
  createdAt: DateTime! @createdAt
  id: ID! @id
  text: String!
  user: User @relation(name: "CommentsOfUser")
  post: Post @relation(name: "CommentOfPost")
}

type File {
  createdAt: DateTime! @createdAt
  id: ID! @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
}

type Room {
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  id: ID! @id
  participants: [User!]!
  messages: [Message!]! @relation(name: "RoomMessages" onDelete: CASCADE)
}

type Message {
  createdAt: DateTime! @createdAt
  id: ID! @id
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room! @relation(name: "RoomMessages")
}